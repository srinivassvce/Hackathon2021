buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath 'cz.habarta.typescript-generator:typescript-generator-gradle-plugin:2.+'
    }
}
plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}
group = 'com.siemens.dx.hackathon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

apply plugin: 'cz.habarta.typescript-generator'
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //testImplementation 'org.springframework.security:spring-security-test'
}

generateTypeScript {
    /* classes = [
            'com.siemens.dx.hackathon.smarthealthsystem.viewModels.DoctorModel',
            'com.siemens.dx.hackathon.smarthealthsystem.viewModels.HealthCareProviderModel',
            'com.siemens.dx.hackathon.smarthealthsystem.viewModels.PatientAllergyModel',
            'com.siemens.dx.hackathon.smarthealthsystem.viewModels.PatientImmunizationModel',
            'com.siemens.dx.hackathon.smarthealthsystem.viewModels.PatientMedicineModel',
            'com.siemens.dx.hackathon.smarthealthsystem.viewModels.PatientVisitModel',

     ]*/
    classPatterns = ['com.siemens.dx.hackathon.smarthealthsystem.viewModels.*Model',
                     'com.siemens.dx.hackathon.smarthealthsystem.entity.*']
    jsonLibrary = 'jackson2'
    outputKind = 'module'
    outputFile = '../smart-health/src/_gen/entity.d.ts'
}


test {
    useJUnitPlatform()
}
build.dependsOn generateTypeScript